# Analysis and Discovery Module
# Reusable workflow module for project context analysis and requirement discovery

module:
  id: analysis_module
  name: SEAD Analysis and Discovery Module  
  description: "Project context analysis, requirement discovery, and enhancement classification"
  version: "2.0.0"
  
  # Import constitutional framework
  constitutional:
    import: "constitutional-base-template.yaml"
    customizations:
      analysis_specific_validation:
        - Project classification accuracy validation
        - Requirement completeness checking  
        - Catalog pattern discovery validation
        - Enhancement scope boundary verification

agents:
  primary: [sead-analyst, sead-product-owner]
  secondary: [sead-project-manager]

applicable_scenarios:
  - greenfield_projects: "New project context establishment"
  - brownfield_enhancements: "Existing system analysis and classification"
  - requirement_discovery: "Stakeholder requirement elicitation"
  - catalog_gap_analysis: "Catalog pattern availability assessment"

dependencies:
  required_catalog_domains:
    - catalog/api-contracts/ (for pattern discovery)
    - catalog/shared-types/ (for data modeling context)
    - catalog/design-system/ (for UI context)
  
  required_data:
    - unified-pattern-framework.md
    - elicitation-methods.md
    - brainstorming-techniques.md

steps:
  # Step 1: Project Classification
  project_classification:
    agent: sead-analyst
    condition: always
    constitutional_validation: required
    outputs:
      greenfield: project-brief.md
      brownfield: project-classification.md
    
    greenfield_actions:
      primary_action: create_project_brief
      task: sead-facilitate-brainstorming-session
      template: sead-project-brief-tmpl.yaml
      
      constitutional_enhancements:
        catalog_research:
          description: "Check existing catalog patterns for similar projects"
          validation: "Ensure pattern discovery completeness"
          output: "Document applicable patterns and gaps"
        
        mode_awareness:
          description: "Adapt analysis depth to current SEAD mode"
          validation: "Verify mode-appropriate constraint documentation"
          output: "Mode-specific requirement detail level"
        
        constraint_documentation:
          description: "Document catalog gaps for future extension"
          validation: "Ensure gap analysis completeness"
          output: "Catalog extension recommendations"
      
      optional_enhancements:
        catalog_pattern_analysis:
          task: catalog-dependency-analysis
          condition: "mode in ['development', 'build-to-deploy']"
          output: "catalog-patterns-analysis.md"
        
        brainstorming_session:
          task: sead-facilitate-brainstorming-session
          condition: "complexity == 'complex'"
          output: "brainstorming-results.md"
        
        market_research_prompt:
          task: sead-create-deep-research-prompt
          condition: "user_requests_market_analysis"
          output: "market-research-prompt.md"
    
    brownfield_actions:
      primary_action: classify_enhancement_scope
      task: sead-advanced-elicitation
      template: brownfield-analysis-report-tmpl.yaml
      
      constitutional_enhancements:
        enhancement_classification:
          description: "Classify enhancement with governance validation"
          validation: "Ensure constitutional compliance requirements documented"
          output: "Enhancement scope and governance requirements"
        
        catalog_integration_impact:
          description: "Assess catalog integration requirements"
          validation: "Verify catalog impact analysis completeness"
          output: "Catalog integration strategy"
        
        context_preservation_analysis:
          description: "Analyze context preservation needs"
          validation: "Ensure handoff requirements documented"
          output: "Context preservation requirements"
      
      routing_logic:
        single_story:
          condition: "estimated_effort < 4_hours"
          action: "Use sead-brownfield-create-story task"
          exit_workflow: true
          output: "Single story with implementation guidance"
        
        small_feature:
          condition: "estimated_stories <= 3"
          action: "Use sead-brownfield-create-epic task" 
          exit_workflow: true
          output: "Epic with 1-3 stories"
        
        major_enhancement:
          condition: "estimated_stories > 3 || architectural_changes_required"
          action: "Continue to requirements module"
          exit_workflow: false
          output: "Enhancement classification for full workflow"

  # Step 2: Context Documentation
  context_documentation:
    agent: sead-analyst
    condition: "project_phase == 'brownfield' && complexity != 'simple'"
    constitutional_validation: required
    
    actions:
      existing_documentation_assessment:
        description: "Assess existing project documentation"
        checks:
          - constitutional_architecture_docs
          - catalog_pattern_usage_docs  
          - api_specifications
          - governance_standards_docs
        
        adequacy_evaluation:
          constitutionally_adequate:
            condition: "documentation_completeness > 80%"
            action: "Skip sead-document-project, proceed to requirements"
            note: "Existing documentation sufficient for enhancement"
          
          constitutionally_inadequate:
            condition: "documentation_completeness <= 80%"
            action: "Run sead-document-project with catalog integration"
            task: sead-document-project
            output: "sead-brownfield-architecture.md"
            note: "Generate comprehensive system documentation"

# Quality Gates
quality_gates:
  analysis_completeness:
    prototype_mode:
      requirements:
        - Basic project context documented
        - Catalog pattern awareness established
        - Constitutional compliance noted
      validation:
        - Context preservation requirements clear
        - Basic catalog integration identified
    
    development_mode:
      requirements:
        - Comprehensive project analysis completed
        - Catalog patterns identified and documented
        - Constitutional compliance requirements specified
        - Enhancement scope clearly classified
      validation:
        - All stakeholder perspectives captured
        - Catalog gap analysis completed
        - Constitutional validation documented
    
    build_to_deploy_mode:
      requirements:
        - Complete project context documentation
        - Comprehensive catalog pattern analysis
        - Full constitutional compliance documentation
        - Detailed enhancement classification with governance
      validation:
        - Audit trail completeness verified
        - Constitutional compliance certified
        - Catalog integration strategy approved

# Handoff Patterns
handoff_specifications:
  to_requirements_module:
    greenfield:
      artifact: "project-brief.md with catalog pattern recommendations"
      location: "docs/project-brief.md"
      context: "Catalog-aware project context established"
      next_action: "Create catalog-integrated PRD"
    
    brownfield:
      artifact: "project-classification.md with enhancement scope"
      location: "docs/project-classification.md"  
      context: "Enhancement scope classified with constitutional requirements"
      next_action: "Create enhancement specification with catalog integration"
  
  early_exits:
    single_story_exit:
      artifact: "Single story with implementation guidance"
      context: "Constitutional story ready for immediate implementation"
      handoff_to: "sead-developer for direct implementation"
    
    small_epic_exit:
      artifact: "Epic with 1-3 stories and catalog references"
      context: "Constitutional epic ready for sprint planning"
      handoff_to: "sead-scrum-master for story breakdown"

# Constitutional Integration
constitutional_compliance:
  mode_awareness:
    all_modes:
      - Document current SEAD mode constraints
      - Validate analysis depth appropriate for mode
      - Ensure catalog integration level matches mode requirements
  
  catalog_integration:
    discovery_requirements:
      - Identify applicable existing patterns
      - Document pattern gaps and extension needs
      - Recommend catalog evolution strategies
    
    documentation_requirements:
      - Reference catalog patterns in all analysis outputs
      - Maintain catalog pattern traceability
      - Document catalog evolution recommendations

# Performance Metrics
success_metrics:
  analysis_quality:
    - Stakeholder requirement coverage completeness
    - Catalog pattern discovery accuracy
    - Enhancement scope classification precision
    - Constitutional compliance documentation quality
  
  efficiency_metrics:
    - Time to complete analysis phase
    - Number of iteration cycles required
    - Early exit utilization rate (brownfield simple enhancements)
    - Catalog pattern reuse identification rate

# Module Integration Notes
integration_guidance:
  module_reusability:
    - Analysis module can be used independently for requirement discovery
    - Supports both greenfield and brownfield scenarios
    - Scales analysis depth based on complexity parameter
    - Integrates with all other workflow modules
  
  constitutional_compliance:
    - All analysis outputs include constitutional compliance documentation
    - Catalog integration requirements established for downstream modules
    - Context preservation requirements documented for agent handoffs
    - Quality gates enforce mode-appropriate validation levels