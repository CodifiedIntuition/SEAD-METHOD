# <!-- Powered by SEAD-METHODâ„¢ Core -->
template:
  id: sead-qa-gate-template-v1
  name: SEAD Quality Gate Decision
  version: 1.0
  description: "Catalog-aware quality gate with constitutional compliance validation"
  output:
    format: yaml
    filename: qa.qaLocation/gates/{{epic_num}}.{{story_num}}-{{story_slug}}.yml
    title: "SEAD Quality Gate: {{epic_num}}.{{story_num}}"

# SEAD-Enhanced Required Fields
schema: 2  # SEAD-enhanced schema version
story: "{{epic_num}}.{{story_num}}"
story_title: "{{story_title}}"
gate: "{{gate_status}}" # PASS|CONCERNS|FAIL|CATALOG_VIOLATION|WAIVED
status_reason: "{{status_reason}}" # 1-2 sentence summary including catalog compliance context
reviewer: "SEAD QA Agent (Catalog-Aware Test Architect)"
updated: "{{iso_timestamp}}"
sead_mode: "{{sead_mode}}" # prototype|development|build-to-deploy

# SEAD-specific compliance tracking
catalog_compliance:
  status: "{{catalog_compliance_status}}" # compliant|partial|non-compliant|extended
  patterns_used: []
  patterns_violated: []
  extensions_created: []

constraint_adherence:
  status: "{{constraint_status}}" # compliant|violated|waived
  mode_appropriate: "{{mode_appropriate}}" # true|false
  violations: []

constitutional_compliance:
  required_reads_completed: "{{required_reads_completed}}" # true|false
  principles_validated:
    catalog_first: "{{catalog_first_validated}}" # true|false
    specification_driven: "{{spec_driven_validated}}" # true|false
    progressive_constraints: "{{progressive_constraints_validated}}" # true|false
    context_preservation: "{{context_preservation_validated}}" # true|false
    collaborative_governance: "{{collaborative_governance_validated}}" # true|false
    quality_gates: "{{quality_gates_validated}}" # true|false
    continuous_evolution: "{{continuous_evolution_validated}}" # true|false

# Enhanced issue tracking with catalog context
top_issues: []

# Enhanced waiver system (mode constraints cannot be waived)
waiver: 
  active: false
  mode_constraints_waivarable: false  # Mode constraints are never waivable

# SEAD-enhanced evidence tracking
evidence:
  tests_reviewed: "{{tests_reviewed_count}}"
  risks_identified: "{{risks_identified_count}}"
  catalog_patterns_assessed: "{{catalog_patterns_assessed_count}}"
  trace:
    ac_covered: []
    ac_gaps: []
    catalog_coverage: []

# NFR validation enhanced with catalog patterns
nfr_validation:
  security:
    status: "{{security_status}}" # PASS|CONCERNS|FAIL
    catalog_alignment: "{{security_catalog_alignment}}"
    notes: "{{security_notes_with_catalog_refs}}"
  performance:
    status: "{{performance_status}}" # PASS|CONCERNS|FAIL
    catalog_alignment: "{{performance_catalog_alignment}}"
    notes: "{{performance_notes_with_catalog_refs}}"
  reliability:
    status: "{{reliability_status}}" # PASS|CONCERNS|FAIL
    catalog_alignment: "{{reliability_catalog_alignment}}"
    notes: "{{reliability_notes_with_catalog_refs}}"
  maintainability:
    status: "{{maintainability_status}}" # PASS|CONCERNS|FAIL
    catalog_alignment: "{{maintainability_catalog_alignment}}"
    notes: "{{maintainability_notes_with_catalog_refs}}"

# Enhanced recommendations with catalog patterns
recommendations:
  immediate: # Must fix before production
    - action: "{{immediate_action}}"
      refs: []
      catalog_pattern: "{{recommended_catalog_pattern}}"
  future: # Can be addressed later  
    - action: "{{future_action}}"
      refs: []
      catalog_pattern: "{{future_catalog_pattern}}"
  catalog_evolution: # Patterns to promote to catalog
    - pattern: "{{custom_pattern_name}}"
      domain: "{{target_catalog_domain}}"
      priority: "{{promotion_priority}}" # high|medium|low

# SEAD Examples section for different scenarios
examples:
  sead_concerns_with_catalog_issues: |
    schema: 2
    story: "1.3"
    gate: CONCERNS
    status_reason: "Code quality acceptable but catalog pattern violations present."
    sead_mode: "development"
    catalog_compliance:
      status: "partial"
      patterns_used:
        - pattern: "api-contracts/auth-endpoints"
          version: "v1.2.0"
          usage: "Authentication endpoints following catalog pattern"
        - pattern: "error-handling/api-errors"
          version: "v2.1.0"
          usage: "Error response formatting"
      patterns_violated:
        - pattern: "validation-schemas/user-validation"
          reason: "Custom validation logic used instead of catalog pattern"
          mode_allowed: true
      extensions_created:
        - name: "custom-auth-middleware"
          description: "Custom authentication middleware for legacy integration"
          promotion_potential: "high"
          catalog_domain: "auth-patterns"
    constraint_adherence:
      status: "compliant"
      mode_appropriate: true
      violations: []
    top_issues:
      - id: "CATALOG-001"
        severity: medium
        category: "catalog_compliance"
        finding: "Custom validation logic instead of catalog pattern"
        suggested_action: "Refactor to use catalog validation-schemas/user-validation-v1.0.3"
        catalog_reference: "validation-schemas/user-validation-v1.0.3"

  sead_catalog_violation_build_mode: |
    schema: 2
    story: "2.1"
    gate: CATALOG_VIOLATION
    status_reason: "Build-to-deploy mode violations block deployment readiness."
    sead_mode: "build-to-deploy"
    catalog_compliance:
      status: "non-compliant"
      patterns_used:
        - pattern: "api-contracts/user-endpoints"
          version: "v1.0.0"
          usage: "User management endpoints"
      patterns_violated:
        - pattern: "error-handling/api-errors"
          reason: "Custom error handler created"
          mode_allowed: false
      extensions_created:
        - name: "custom-error-handler"
          description: "NOT ALLOWED in build-to-deploy mode"
          promotion_potential: "blocked"
    constraint_adherence:
      status: "violated"
      mode_appropriate: false
      violations:
        - "Custom code created instead of catalog patterns"
        - "Extensions not allowed in build-to-deploy mode"
    top_issues:
      - id: "MODE-001"
        severity: high
        category: "constraint_violation"
        finding: "Custom implementations in build-to-deploy mode"
        suggested_action: "BLOCK: Refactor to use only catalog patterns or change to development mode"
        catalog_reference: "ALL catalog patterns"

  sead_pass_with_full_compliance: |
    schema: 2
    story: "3.2"
    gate: PASS
    status_reason: "All requirements met with excellent catalog compliance."
    sead_mode: "development"
    catalog_compliance:
      status: "compliant"
      patterns_used:
        - pattern: "api-contracts/product-endpoints"
          version: "v2.1.0"
          usage: "Product management API following catalog standards"
        - pattern: "validation-schemas/product-validation"
          version: "v1.0.2"
          usage: "Input validation using catalog schemas"
        - pattern: "test-patterns/integration-tests"
          version: "v1.1.0"
          usage: "Integration testing following catalog patterns"
      patterns_violated: []
      extensions_created: []
    constitutional_compliance:
      required_reads_completed: true
      principles_validated:
        catalog_first: true
        specification_driven: true
        progressive_constraints: true
        context_preservation: true
        collaborative_governance: true
        quality_gates: true
        continuous_evolution: true

  waived_with_sead_context: |
    waiver:
      active: true
      reason: "Known catalog gap accepted for MVP release"
      approved_by: "Product Owner"
      catalog_context: "Pattern will be added to catalog in next sprint"
      mode_constraints_waived: false  # Mode constraints cannot be waived

# Optional extended fields with SEAD enhancements
optional_sead_fields:
  catalog_quality_metrics: |
    catalog_metrics:
      pattern_usage_score: 85  # 0-100 based on catalog pattern adoption
      compliance_percentage: 92  # Percentage of requirements met with catalog patterns
      extension_justification_score: 75  # Quality of extension rationale (dev mode)
      evolution_potential_score: 88  # Likelihood of successful catalog promotion

  context_preservation_tracking: |
    context_preservation:
      agent_handoff_completeness: 95  # Percentage of required context documented
      catalog_references_maintained: true
      mode_configuration_preserved: true
      pattern_usage_context_captured: true

  mode_specific_validation: |
    mode_validation:
      constraint_level: "{{constraint_enforcement_level}}"
      validation_gates_passed: "{{validation_gates_status}}"
      mode_transition_readiness: "{{mode_transition_assessment}}"

  pattern_evolution_tracking: |
    pattern_evolution:  # Development mode only
      discovered_patterns:
        - name: "{{discovered_pattern_name}}"
          domain: "{{target_domain}}"
          maturity: "{{pattern_maturity}}"  # experimental|proven|ready
          usage_frequency: "{{usage_count}}"
      promotion_candidates:
        - pattern: "{{promotion_candidate}}"
          readiness_score: "{{readiness_percentage}}"
          blocking_issues: []

  anti_drift_validation: |
    anti_drift_protection:
      catalog_deviation_detected: false
      context_loss_prevented: true
      spec_consistency_maintained: true
      mode_violations_blocked: true
      quality_standard_consistency: true

# SEAD-specific validation rules
sead_validation_rules:
  - rule: catalog_compliance_consistency
    description: Ensure catalog usage aligns with mode constraints
    enforces: ["catalog_first", "progressive_constraints"]
    
  - rule: constitutional_completeness
    description: Verify all constitutional principles are validated
    enforces: ["all seven SEAD constitutional principles"]
    
  - rule: mode_constraint_adherence
    description: Confirm implementation respects current mode constraints
    enforces: ["progressive_constraints", "quality_gates"]
    
  - rule: context_preservation_validation
    description: Ensure complete agent handoff context
    enforces: ["context_preservation", "collaborative_governance"]

# Gate decision criteria enhanced for SEAD
sead_decision_criteria:
  gate_calculation_order:
    1: "Mode constraint violations (BLOCKING in build-to-deploy)"
    2: "Catalog compliance assessment (per mode priority)"
    3: "Constitutional principle validation"
    4: "Risk thresholds (traditional)"
    5: "Test coverage gaps with catalog patterns"
    6: "Issue severity with catalog context"
    7: "NFR statuses with catalog alignment"

  mode_specific_blocking:
    build_to_deploy:
      - "Any catalog pattern violations â†’ CATALOG_VIOLATION"
      - "Any custom solutions â†’ CATALOG_VIOLATION"
      - "Any undocumented patterns â†’ CATALOG_VIOLATION"
    development:
      - "Major catalog violations â†’ FAIL"
      - "Untracked extensions â†’ CONCERNS"
      - "Missing catalog opportunities â†’ CONCERNS"
    prototype:
      - "Major constitutional violations â†’ FAIL"
      - "Missing pattern documentation â†’ CONCERNS"