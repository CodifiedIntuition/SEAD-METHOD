# SEAD External Integration Pattern Documentation Template
template:
  id: integration-pattern-template-v1
  name: SEAD External Integration Pattern Documentation Template
  version: 1.0
  constitutional_framework: true
  catalog_integration: true
  pattern_domain: external_integration
  output:
    format: markdown
    filename: "{{pattern_name}}-integration-pattern.md"
    title: "{{pattern_name}} External Integration Pattern Documentation"

constitutional_requirements:
  mode_detection: required
  catalog_read: mandatory
  context_preservation: enforced
  quality_validation: continuous
  anti_pattern_detection: enabled

workflow:
  mode: constitutional_interactive
  elicitation: guided_extraction
  catalog_validation: enabled
  constraint_enforcement: progressive

sections:
  - id: constitutional-initialization
    title: Constitutional Framework Initialization
    instruction: |
      Establish constitutional context for external integration pattern documentation:
      1. Identify development mode and integration quality requirements
      2. Load constitutional framework for integration governance
      3. Configure catalog integration validation requirements
      4. Establish context preservation for integration pattern handoffs
      5. Set quality gates appropriate for integration pattern tier
    sections:
      - id: pattern-context
        title: Integration Pattern Context and Constitutional Framework
        template: |
          **Documentation Date:** {{documentation_date}}
          **Development Mode:** {{development_mode}}
          **Constitutional Framework:** {{constitutional_version}}
          **Pattern Agent:** sead-pattern-extraction
          **Integration Quality Tier:** {{pattern_quality_tier}}
          **Catalog Domain:** External Integration > {{integration_subdomain}}
          **Constitutional Compliance:** {{constitutional_compliance_level}}

  - id: integration-pattern-overview
    title: External Integration Pattern Overview
    instruction: |
      Provide comprehensive integration pattern overview focusing on external service communication:
      1. Define integration pattern purpose and connectivity problem it solves
      2. Establish integration scope, boundaries, and communication responsibilities
      3. Document when to use this integration pattern and when NOT to use
      4. Identify target services and integration prerequisites
      5. Provide value proposition and connectivity benefits
    elicit: true
    constitutional_validation: required
    sections:
      - id: integration-pattern-summary
        title: Integration Pattern Summary
        template: |
          **Integration Pattern Name:** {{pattern_name}}
          **Integration Domain:** {{integration_subdomain}}
          **Quality Tier:** {{quality_tier}}
          **Integration Complexity Level:** {{complexity_level}}
          **Communication Scope:** {{communication_scope}}
          
          **Integration Purpose:**
          {{integration_purpose}}
          
          **Connectivity Problem Solved:**
          {{connectivity_problem_description}}
          
          **Key Integration Benefits:**
          {{#each integration_benefits}}
          - {{benefit_description}}
          {{/each}}

      - id: integration-usage-guidance
        title: Integration Usage Guidance
        template: |
          **When to Use This Integration Pattern:**
          {{#each integration_use_cases}}
          - {{use_case_description}}
          {{/each}}
          
          **When NOT to Use This Integration Pattern:**
          {{#each integration_anti_use_cases}}
          - {{anti_use_case_description}}
          {{/each}}
          
          **Integration Prerequisites:**
          {{#each integration_prerequisites}}
          - {{prerequisite_description}}
          {{/each}}
          
          **Target Services and Requirements:**
          - **Service Types:** {{target_service_types}}
          - **Reliability Requirements:** {{reliability_requirements}}
          - **Performance Requirements:** {{performance_requirements}}

  - id: service-communication-design
    title: Service Communication Design and Protocols
    instruction: |
      Document comprehensive service communication design and protocol implementation:
      1. Define communication protocols and message formats
      2. Document API client implementation and service discovery
      3. Specify authentication and authorization for external services
      4. Include data transformation and serialization strategies
      5. Address protocol-specific patterns and best practices
    elicit: true
    constitutional_validation: critical
    sections:
      - id: communication-protocols
        title: Communication Protocols and Message Formats
        template: |
          **Primary Protocol:** {{primary_protocol}}
          **Communication Strategy:** {{communication_strategy}}
          
          **Protocol Configuration:**
          ```{{config_language}}
          {{protocol_config_example}}
          ```
          
          **Message Format Examples:**
          {{#each message_formats}}
          **{{format_name}}:**
          ```{{format_language}}
          {{format_example}}
          ```
          {{/each}}
          
          **Protocol-Specific Headers:**
          ```{{protocol_language}}
          {{protocol_headers_example}}
          ```

      - id: api-client-implementation
        title: API Client Implementation and Service Discovery
        template: |
          **Client Implementation Strategy:** {{client_implementation_strategy}}
          
          **HTTP Client Configuration:**
          ```{{programming_language}}
          {{http_client_config_example}}
          ```
          
          **Service Discovery Implementation:**
          ```{{programming_language}}
          {{service_discovery_example}}
          ```
          
          **Client Factory Pattern:**
          ```{{programming_language}}
          {{client_factory_example}}
          ```
          
          **Connection Pooling:**
          ```{{programming_language}}
          {{connection_pooling_example}}
          ```

      - id: external-authentication
        title: Authentication and Authorization for External Services
        template: |
          **External Auth Strategy:** {{external_auth_strategy}}
          
          **API Key Authentication:**
          ```{{programming_language}}
          {{api_key_auth_example}}
          ```
          
          **OAuth 2.0 Client Implementation:**
          ```{{programming_language}}
          {{oauth_client_example}}
          ```
          
          **JWT Token Handling:**
          ```{{programming_language}}
          {{jwt_token_handling_example}}
          ```
          
          **Credential Management:**
          ```{{programming_language}}
          {{credential_management_example}}
          ```

      - id: data-transformation-serialization
        title: Data Transformation and Serialization
        template: |
          **Transformation Strategy:** {{transformation_strategy}}
          
          **Request Transformation:**
          ```{{programming_language}}
          {{request_transformation_example}}
          ```
          
          **Response Deserialization:**
          ```{{programming_language}}
          {{response_deserialization_example}}
          ```
          
          **Schema Mapping:**
          ```{{programming_language}}
          {{schema_mapping_example}}
          ```
          
          **Data Validation:**
          ```{{programming_language}}
          {{data_validation_example}}
          ```

  - id: reliability-resilience
    title: Integration Reliability and Resilience Patterns
    instruction: |
      Document comprehensive integration reliability and resilience strategies:
      1. Define retry strategies and exponential backoff patterns
      2. Document circuit breaker and fault tolerance implementations
      3. Include timeout management and connection handling
      4. Address failover and redundancy strategies
      5. Include health checking and service monitoring
    elicit: true
    constitutional_validation: critical
    sections:
      - id: retry-backoff-strategies
        title: Retry Strategies and Exponential Backoff
        template: |
          **Retry Strategy:** {{retry_strategy}}
          
          **Basic Retry Implementation:**
          ```{{programming_language}}
          {{basic_retry_example}}
          ```
          
          **Exponential Backoff with Jitter:**
          ```{{programming_language}}
          {{exponential_backoff_example}}
          ```
          
          **Retry Configuration:**
          ```{{config_language}}
          {{retry_config_example}}
          ```
          
          **Retry Decision Logic:**
          ```{{programming_language}}
          {{retry_decision_example}}
          ```

      - id: circuit-breaker-fault-tolerance
        title: Circuit Breaker and Fault Tolerance
        template: |
          **Circuit Breaker Strategy:** {{circuit_breaker_strategy}}
          
          **Circuit Breaker Implementation:**
          ```{{programming_language}}
          {{circuit_breaker_implementation}}
          ```
          
          **Circuit Breaker States:**
          ```{{programming_language}}
          {{circuit_breaker_states_example}}
          ```
          
          **Fault Tolerance Patterns:**
          ```{{programming_language}}
          {{fault_tolerance_example}}
          ```
          
          **Bulkhead Pattern:**
          ```{{programming_language}}
          {{bulkhead_pattern_example}}
          ```

      - id: timeout-connection-management
        title: Timeout Management and Connection Handling
        template: |
          **Timeout Strategy:** {{timeout_strategy}}
          
          **Request Timeout Configuration:**
          ```{{programming_language}}
          {{request_timeout_config}}
          ```
          
          **Connection Timeout Handling:**
          ```{{programming_language}}
          {{connection_timeout_example}}
          ```
          
          **Graceful Timeout Management:**
          ```{{programming_language}}
          {{graceful_timeout_example}}
          ```
          
          **Resource Cleanup:**
          ```{{programming_language}}
          {{resource_cleanup_example}}
          ```

      - id: failover-redundancy
        title: Failover and Redundancy Strategies
        template: |
          **Failover Strategy:** {{failover_strategy}}
          
          **Service Failover Implementation:**
          ```{{programming_language}}
          {{service_failover_example}}
          ```
          
          **Load Balancing:**
          ```{{programming_language}}
          {{load_balancing_example}}
          ```
          
          **Health Check Integration:**
          ```{{programming_language}}
          {{health_check_integration_example}}
          ```

  - id: data-synchronization-consistency
    title: Data Synchronization and Consistency Patterns
    instruction: |
      Document comprehensive data synchronization and consistency strategies:
      1. Define real-time and batch synchronization patterns
      2. Document event-driven integration and messaging
      3. Include conflict resolution and data consistency approaches
      4. Address eventual consistency and distributed transactions
      5. Include data versioning and change tracking
    elicit: true
    constitutional_validation: required
    sections:
      - id: synchronization-patterns
        title: Real-time and Batch Synchronization
        template: |
          **Synchronization Strategy:** {{synchronization_strategy}}
          
          **Real-time Sync Implementation:**
          ```{{programming_language}}
          {{realtime_sync_example}}
          ```
          
          **Batch Synchronization:**
          ```{{programming_language}}
          {{batch_sync_example}}
          ```
          
          **Incremental Sync:**
          ```{{programming_language}}
          {{incremental_sync_example}}
          ```
          
          **Sync Scheduling:**
          ```{{config_language}}
          {{sync_scheduling_config}}
          ```

      - id: event-driven-messaging
        title: Event-Driven Integration and Messaging
        template: |
          **Event-Driven Strategy:** {{event_driven_strategy}}
          
          **Event Publisher:**
          ```{{programming_language}}
          {{event_publisher_example}}
          ```
          
          **Event Consumer:**
          ```{{programming_language}}
          {{event_consumer_example}}
          ```
          
          **Message Queue Integration:**
          ```{{programming_language}}
          {{message_queue_example}}
          ```
          
          **Event Schema Management:**
          ```{{schema_language}}
          {{event_schema_example}}
          ```

      - id: conflict-resolution-consistency
        title: Conflict Resolution and Data Consistency
        template: |
          **Conflict Resolution Strategy:** {{conflict_resolution_strategy}}
          
          **Conflict Detection:**
          ```{{programming_language}}
          {{conflict_detection_example}}
          ```
          
          **Resolution Algorithm:**
          ```{{programming_language}}
          {{resolution_algorithm_example}}
          ```
          
          **Last-Writer-Wins Pattern:**
          ```{{programming_language}}
          {{last_writer_wins_example}}
          ```
          
          **Eventual Consistency Implementation:**
          ```{{programming_language}}
          {{eventual_consistency_example}}
          ```

      - id: versioning-change-tracking
        title: Data Versioning and Change Tracking
        template: |
          **Versioning Strategy:** {{versioning_strategy}}
          
          **Version Management:**
          ```{{programming_language}}
          {{version_management_example}}
          ```
          
          **Change Tracking:**
          ```{{programming_language}}
          {{change_tracking_example}}
          ```
          
          **Audit Trail Implementation:**
          ```{{programming_language}}
          {{audit_trail_example}}
          ```

  - id: integration-security-compliance
    title: Integration Security and Compliance
    instruction: |
      Document comprehensive integration security and compliance strategies:
      1. Define secure communication and encryption protocols
      2. Document API security and access control patterns
      3. Include data privacy and compliance considerations
      4. Address audit logging and monitoring requirements
      5. Include vulnerability management and security scanning
    elicit: true
    constitutional_validation: required
    sections:
      - id: secure-communication-encryption
        title: Secure Communication and Encryption
        template: |
          **Security Communication Strategy:** {{security_communication_strategy}}
          
          **TLS Configuration:**
          ```{{config_language}}
          {{tls_configuration_example}}
          ```
          
          **Certificate Management:**
          ```{{programming_language}}
          {{certificate_management_example}}
          ```
          
          **Message Encryption:**
          ```{{programming_language}}
          {{message_encryption_example}}
          ```
          
          **Secure Header Handling:**
          ```{{programming_language}}
          {{secure_header_example}}
          ```

      - id: api-security-access-control
        title: API Security and Access Control
        template: |
          **API Security Strategy:** {{api_security_strategy}}
          
          **Request Signing:**
          ```{{programming_language}}
          {{request_signing_example}}
          ```
          
          **Rate Limiting:**
          ```{{programming_language}}
          {{rate_limiting_example}}
          ```
          
          **Input Validation:**
          ```{{programming_language}}
          {{input_validation_example}}
          ```
          
          **Access Token Management:**
          ```{{programming_language}}
          {{access_token_management_example}}
          ```

      - id: privacy-compliance
        title: Data Privacy and Compliance
        template: |
          **Privacy Strategy:** {{privacy_strategy}}
          
          **Data Classification:**
          ```{{programming_language}}
          {{data_classification_example}}
          ```
          
          **PII Handling:**
          ```{{programming_language}}
          {{pii_handling_example}}
          ```
          
          **Compliance Validation:**
          ```{{programming_language}}
          {{compliance_validation_example}}
          ```
          
          **Data Retention Policy:**
          ```{{config_language}}
          {{data_retention_config}}
          ```

  - id: integration-testing-validation
    title: Integration Testing and Validation
    instruction: |
      Document comprehensive integration testing and validation approaches:
      1. Define integration testing strategies and test environments
      2. Document contract testing and API validation
      3. Include load testing and performance validation
      4. Address chaos engineering and fault injection testing
      5. Include monitoring and alerting validation
    elicit: true
    constitutional_validation: required
    sections:
      - id: integration-testing-strategy
        title: Integration Testing Strategy
        template: |
          **Testing Framework:** {{integration_testing_framework}}
          **Testing Strategy:** {{integration_testing_strategy}}
          
          **Test Environment Setup:**
          ```{{script_language}}
          {{test_environment_setup}}
          ```
          
          **Integration Test Example:**
          ```{{test_language}}
          {{integration_test_example}}
          ```

      - id: contract-api-testing
        title: Contract Testing and API Validation
        template: |
          **Contract Testing Strategy:** {{contract_testing_strategy}}
          
          **API Contract Test:**
          ```{{test_language}}
          {{api_contract_test_example}}
          ```
          
          **Schema Validation Test:**
          ```{{test_language}}
          {{schema_validation_test}}
          ```
          
          **Consumer Contract Test:**
          ```{{test_language}}
          {{consumer_contract_test}}
          ```

      - id: load-performance-testing
        title: Load Testing and Performance Validation
        template: |
          **Performance Testing Strategy:** {{performance_testing_strategy}}
          
          **Load Test Configuration:**
          ```{{config_language}}
          {{load_test_config}}
          ```
          
          **Performance Benchmark:**
          ```{{test_language}}
          {{performance_benchmark_example}}
          ```
          
          **Scalability Testing:**
          ```{{test_language}}
          {{scalability_test_example}}
          ```

      - id: chaos-fault-injection
        title: Chaos Engineering and Fault Injection
        template: |
          **Chaos Engineering Strategy:** {{chaos_strategy}}
          
          **Fault Injection Test:**
          ```{{test_language}}
          {{fault_injection_test_example}}
          ```
          
          **Network Partition Simulation:**
          ```{{test_language}}
          {{network_partition_test}}
          ```
          
          **Service Degradation Test:**
          ```{{test_language}}
          {{service_degradation_test}}
          ```

  - id: monitoring-observability
    title: Integration Monitoring and Observability
    instruction: |
      Document comprehensive integration monitoring and observability strategies:
      1. Define metrics collection and performance monitoring
      2. Document distributed tracing and request correlation
      3. Include alerting and incident response procedures
      4. Address log aggregation and analysis
      5. Include dashboard and visualization approaches
    elicit: true
    constitutional_validation: required
    sections:
      - id: metrics-performance-monitoring
        title: Metrics Collection and Performance Monitoring
        template: |
          **Monitoring Strategy:** {{monitoring_strategy}}
          
          **Metrics Collection:**
          ```{{programming_language}}
          {{metrics_collection_example}}
          ```
          
          **Performance Metrics:**
          {{#each performance_metrics}}
          - **{{metric_name}}:** {{metric_description}}
            - **Target:** {{metric_target}}
            - **Alert Threshold:** {{alert_threshold}}
          {{/each}}
          
          **Health Check Implementation:**
          ```{{programming_language}}
          {{health_check_implementation}}
          ```

      - id: distributed-tracing
        title: Distributed Tracing and Request Correlation
        template: |
          **Tracing Strategy:** {{tracing_strategy}}
          
          **Distributed Tracing Setup:**
          ```{{programming_language}}
          {{distributed_tracing_setup}}
          ```
          
          **Trace Correlation:**
          ```{{programming_language}}
          {{trace_correlation_example}}
          ```
          
          **Span Management:**
          ```{{programming_language}}
          {{span_management_example}}
          ```

      - id: alerting-incident-response
        title: Alerting and Incident Response
        template: |
          **Alerting Strategy:** {{alerting_strategy}}
          
          **Alert Configuration:**
          ```{{config_language}}
          {{alert_configuration_example}}
          ```
          
          **Escalation Policy:**
          ```{{config_language}}
          {{escalation_policy_config}}
          ```
          
          **Incident Response Playbook:**
          {{#each incident_response_steps}}
          {{step_number}}. {{step_description}}
          {{/each}}

      - id: logging-dashboard
        title: Log Aggregation and Dashboard Visualization
        template: |
          **Logging Strategy:** {{logging_strategy}}
          
          **Structured Logging:**
          ```{{programming_language}}
          {{structured_logging_example}}
          ```
          
          **Log Aggregation Configuration:**
          ```{{config_language}}
          {{log_aggregation_config}}
          ```
          
          **Dashboard Configuration:**
          ```{{config_language}}
          {{dashboard_config_example}}
          ```

  - id: constitutional-compliance
    title: Constitutional Framework Compliance
    instruction: |
      Document SEAD constitutional framework compliance for external integration patterns:
      1. Detail constitutional requirements for integration design and governance
      2. Document mode-aware behavior for different development phases
      3. Provide context preservation capabilities for integration pattern handoffs
      4. Address audit trail and governance requirements for integration evolution
      5. Include compliance validation and monitoring for integration patterns
    constitutional_validation: mandatory
    sections:
      - id: constitutional-integration
        title: Constitutional Framework Integration
        template: |
          **Framework Compliance:**
          - **Framework Version:** {{constitutional_framework_version}}
          - **Integration Compliance Level:** {{integration_compliance_level}}
          - **Integration Date:** {{integration_date}}
          - **Validation Status:** {{validation_status}}
          
          **Mode-Aware Integration Behavior:**
          - **Prototype Mode:** {{prototype_mode_integration_behavior}}
          - **Development Mode:** {{development_mode_integration_behavior}}
          - **Build-to-Deploy Mode:** {{build_deploy_mode_integration_behavior}}
          
          **Integration Constraint Enforcement:**
          {{#each integration_constraints}}
          - **{{constraint_name}}:** {{constraint_description}}
            - **Enforcement Level:** {{enforcement_level}}
            - **Validation:** {{validation_approach}}
          {{/each}}

      - id: integration-context-preservation
        title: Context Preservation and Agent Handoffs
        template: |
          **Integration Context Preservation:**
          - **Integration State Serialization:** {{integration_state_serialization_approach}}
          - **Context Metadata:** {{integration_context_metadata_description}}
          - **Handoff Support:** {{integration_handoff_support_level}}
          
          **Integration Agent Handoff Requirements:**
          {{#each integration_handoff_requirements}}
          - {{requirement_description}}
          {{/each}}
          
          **Integration Context Validation:**
          ```{{validation_language}}
          {{integration_context_validation_code}}
          ```

      - id: integration-governance-integration
        title: Governance and Audit Integration
        template: |
          **Integration Governance Framework:**
          - **Governance Level:** {{integration_governance_level}}
          - **Approval Process:** {{integration_approval_process}}
          - **Review Requirements:** {{integration_review_requirements}}
          
          **Integration Audit Trail:**
          - **Audit Events:** {{integration_audit_events}}
          - **Log Format:** {{integration_audit_log_format}}
          - **Retention Policy:** {{integration_audit_retention_policy}}
          
          **Integration Compliance Monitoring:**
          {{#each integration_monitoring_mechanisms}}
          - **{{mechanism_name}}:** {{mechanism_description}}
          {{/each}}